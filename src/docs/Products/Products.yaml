openapi: 3.0.1
info:
  title: Products API
  description: API para la gestión de productos
  version: 1.0.0
paths:
  /api/products/{pid}:
    get:
      summary: Obtener un producto por su ID
      tags:
        - Products
      parameters:
        - in: path
          name: pid
          schema:
            type: string
          required: true
          description: ID del producto
      responses:
        "200":
          description: Producto obtenido exitosamente
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"
        "404":
          description: Producto no encontrado
        "500":
          description: Error del servidor
    put:
      summary: Actualizar un producto existente por su ID
      tags:
        - Products
      parameters:
        - in: path
          name: pid
          schema:
            type: string
          required: true
          description: ID del producto
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProductUpdate"
      responses:
        "200":
          description: Producto actualizado exitosamente
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"
        "500":
          description: Error del servidor
    delete:
      summary: Eliminar un producto por su ID
      tags:
        - Products
      parameters:
        - in: path
          name: pid
          schema:
            type: string
          required: true
          description: ID del producto
      responses:
        "200":
          description: Producto eliminado exitosamente
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"
        "500":
          description: Error del servidor

  /api/products:
    get:
      summary: Obtener todos los productos
      tags:
        - Products
      parameters:
        - in: query
          name: limit
          schema:
            type: integer
            minimum: 1
            maximum: 100
          description: Cantidad máxima de productos a devolver
        - in: query
          name: page
          schema:
            type: integer
            minimum: 1
          description: Número de página
        - in: query
          name: sort
          schema:
            type: string
            enum: [asc, desc]
          description: Ordenar productos por precio (ascendente o descendente)
        - in: query
          name: category
          schema:
            type: string
          description: Filtrar productos por categoría
      responses:
        "200":
          description: Productos obtenidos exitosamente
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductList"
        "500":
          description: Error del servidor

    post:
      summary: Agregar un nuevo producto
      tags:
        - Products
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NewProduct"
      responses:
        "201":
          description: Producto agregado exitosamente
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"
        "500":
          description: Error del servidor

components:
  schemas:
    Product:
      type: object
      properties:
        _id:
          type: string
        title:
          type: string
        description:
          type: string
        price:
          type: number
        img:
          type: string
        code:
          type: string
        stock:
          type: number
        category:
          type: string
        status:
          type: boolean
        thumbnails:
          type: array
          items:
            type: string
        owner:
          type: string
    ProductUpdate:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        price:
          type: number
        img:
          type: string
        stock:
          type: number
        category:
          type: string
        status:
          type: boolean
        thumbnails:
          type: array
          items:
            type: string
    NewProduct:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        price:
          type: number
        img:
          type: string
        code:
          type: string
        stock:
          type: number
        category:
          type: string
        status:
          type: boolean
        thumbnails:
          type: array
          items:
            type: string
        owner:
          type: string
    ProductList:
      type: object
      properties:
        docs:
          type: array
          items:
            $ref: "#/components/schemas/Product"
        totalDocs:
          type: number
        limit:
          type: number
        totalPages:
          type: number
        page:
          type: number
        pagingCounter:
          type: number
        hasPrevPage:
          type: boolean
        hasNextPage:
          type: boolean
        prevPage:
          type: number
        nextPage:
          type: number
